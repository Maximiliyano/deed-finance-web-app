// <auto-generated />
using System;
using FinanceTracker.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceTracker.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(FinanceTrackerDbContext))]
    [Migration("20240805134530_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanceTracker.Domain.Entities.Capital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalExpense")
                        .HasColumnType("real");

                    b.Property<float>("TotalIncome")
                        .HasColumnType("real");

                    b.Property<float>("TotalTransferIn")
                        .HasColumnType("real");

                    b.Property<float>("TotalTransferOut")
                        .HasColumnType("real");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Capitals", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 374.82f,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Auto Loan Account",
                            TotalExpense = 900.37f,
                            TotalIncome = 519.42f,
                            TotalTransferIn = 651.92f,
                            TotalTransferOut = 271.32f
                        },
                        new
                        {
                            Id = 2,
                            Balance = 729.81f,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Investment Account",
                            TotalExpense = 850.31f,
                            TotalIncome = 131f,
                            TotalTransferIn = 388.79f,
                            TotalTransferOut = 620.83f
                        },
                        new
                        {
                            Id = 3,
                            Balance = 498.09f,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Money Market Account",
                            TotalExpense = 138.66f,
                            TotalIncome = 837.26f,
                            TotalTransferIn = 625.13f,
                            TotalTransferOut = 806.57f
                        },
                        new
                        {
                            Id = 4,
                            Balance = 149.78f,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Money Market Account",
                            TotalExpense = 740.6f,
                            TotalIncome = 258.88f,
                            TotalTransferIn = 412.62f,
                            TotalTransferOut = 666.31f
                        },
                        new
                        {
                            Id = 5,
                            Balance = 529.76f,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Investment Account",
                            TotalExpense = 995.83f,
                            TotalIncome = 152.74f,
                            TotalTransferIn = 156.53f,
                            TotalTransferOut = 341.9f
                        },
                        new
                        {
                            Id = 6,
                            Balance = 571.95f,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Checking Account",
                            TotalExpense = 573.43f,
                            TotalIncome = 253.52f,
                            TotalTransferIn = 95.68f,
                            TotalTransferOut = 590.51f
                        },
                        new
                        {
                            Id = 7,
                            Balance = 543.28f,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Auto Loan Account",
                            TotalExpense = 789.84f,
                            TotalIncome = 440.32f,
                            TotalTransferIn = 603.07f,
                            TotalTransferOut = 708.67f
                        },
                        new
                        {
                            Id = 8,
                            Balance = 161.39f,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Savings Account",
                            TotalExpense = 946.6f,
                            TotalIncome = 867.6f,
                            TotalTransferIn = 949.65f,
                            TotalTransferOut = 71.95f
                        },
                        new
                        {
                            Id = 9,
                            Balance = 825.72f,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Personal Loan Account",
                            TotalExpense = 234.56f,
                            TotalIncome = 508.88f,
                            TotalTransferIn = 131.81f,
                            TotalTransferOut = 222.63f
                        },
                        new
                        {
                            Id = 10,
                            Balance = 629.66f,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Checking Account",
                            TotalExpense = 220.75f,
                            TotalIncome = 302.51f,
                            TotalTransferIn = 368.18f,
                            TotalTransferOut = 871.98f
                        });
                });

            modelBuilder.Entity("FinanceTracker.Domain.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CapitalId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CapitalId");

                    b.ToTable("Expenses", (string)null);
                });

            modelBuilder.Entity("FinanceTracker.Domain.Entities.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CapitalId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CapitalId");

                    b.ToTable("Incomes", (string)null);
                });

            modelBuilder.Entity("FinanceTracker.Domain.Entities.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CapitalId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CapitalId");

                    b.ToTable("Transfers", (string)null);
                });

            modelBuilder.Entity("FinanceTracker.Domain.Entities.Expense", b =>
                {
                    b.HasOne("FinanceTracker.Domain.Entities.Capital", null)
                        .WithMany("Expenses")
                        .HasForeignKey("CapitalId");
                });

            modelBuilder.Entity("FinanceTracker.Domain.Entities.Income", b =>
                {
                    b.HasOne("FinanceTracker.Domain.Entities.Capital", null)
                        .WithMany("Incomes")
                        .HasForeignKey("CapitalId");
                });

            modelBuilder.Entity("FinanceTracker.Domain.Entities.Transfer", b =>
                {
                    b.HasOne("FinanceTracker.Domain.Entities.Capital", null)
                        .WithMany("Transfers")
                        .HasForeignKey("CapitalId");
                });

            modelBuilder.Entity("FinanceTracker.Domain.Entities.Capital", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Incomes");

                    b.Navigation("Transfers");
                });
#pragma warning restore 612, 618
        }
    }
}
